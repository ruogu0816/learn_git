class Solution {
    public int subarraySum(int[] nums, int k) {
        
        // construct a pre fix
        
        int[] prefix = new int[nums.length+1]; 
        prefix[0] = 0;
        for(int i = 0 ; i< nums.length; i++){
            prefix[i+1] = prefix[i] + nums[i];
        }
        
        int count =0;
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        
        for(int i = 0; i< prefix.length; i++){
            int val = prefix[i]; 
            if(map.containsKey(val-k)){
                count += map.get(val-k);
            }
            map.put(val, map.getOrDefault(val, 0) +1);
        }
        return count;
    }
}

//   1 1 1
// 0 1 2 3